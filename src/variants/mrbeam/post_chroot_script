#!/usr/bin/env bash

###############################################################################################
# NOTES:
#
# - Installation still via git clone and python setup and not via pip because I (Florian) was
#   not able to apply the install_extras stuff to the pip process. Afterwards the repos get
#   removed and the update should be possible via the pip update.
#
###############################################################################################

set -x

source /common.sh

function addGitHashToConfig () {
    name=$1
    hash=$(git rev-parse HEAD)
    sed -i -e "s@<$name>@$hash@g" /home/pi/.octoprint/config.yaml
}

install_chroot_fail_on_error_trap

# unpack filesystem directory
unpack /filesystem/root /
unpack /filesystem/home/pi /home/pi pi
unpack /filesystem/home/root /root root

# enable first_boot_script
update-rc.d first_boot_script defaults

# install necessary dependencies
apt-get -y --force-yes install libxml2-dev libxslt-dev libjpeg8-dev hostapd dnsmasq logrotate rfkill python-pip python-smbus libyaml-dev i2c-tools avrdude

# upgrade pip and install wheel system wide
sudo pip install --upgrade pip
sudo pip install wheel

# upgrade pip and install wheel in venv
sudo -u pi /home/pi/oprint/bin/pip install --upgrade pip
sudo -u pi /home/pi/oprint/bin/pip install wheel

# install and use wheels of precached heavy duty packages
sudo -u pi /home/pi/oprint/bin/pip install --no-index --find-links=/wheels/ numpy
sudo -u pi /home/pi/oprint/bin/pip install --no-index --find-links=/wheels/ lxml
sudo -u pi /home/pi/oprint/bin/pip install --no-index --find-links=/wheels/ pillow
sudo rm -rf /wheels

# install Mr Beam Plugin
pushd /home/pi
  gitclone OCTOPI_MRBEAMPLUGIN_REPO MrBeamPlugin
  pushd MrBeamPlugin
    addGitHashToConfig "mrbeamhash"
    sudo -u pi /home/pi/oprint/bin/pip install .
  popd
  rm -rf MrBeamPlugin
popd

# install netconnectd
sudo systemctl disable hostapd.service
sudo systemctl disable dnsmasq.service
sed -i -e "s@#timeout 60;@timeout 60;@g" /etc/dhcp/dhclient.conf
pushd /home/pi
  gitclone OCTOPI_NETCONNECTD_REPO netconnectd
  pushd netconnectd
    addGitHashToConfig "netconnectddaemonhash"
    sudo pip install --process-dependency-links .
    sudo python setup.py install_extras
  popd
  rm -rf netconnectd
popd
sed -i -e "s@allow-hotplug wlan0@#allow-hotplug wlan0@g" /etc/network/interfaces
sed -i -e "s@iface wlan0-raspbian inet manual@#iface wlan0-raspbian inet manual@g" /etc/network/interfaces
sed -i -e "s@    wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf@#    wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf@g" /etc/network/interfaces
sudo systemctl enable netconnectd.service

# install netconnectd-plugin
pushd /home/pi
  gitclone OCTOPI_NETCONNECTD_PLUGIN_REPO OctoPrint-Netconnectd
  pushd OctoPrint-Netconnectd
    addGitHashToConfig "netconnectdpluginhash"
    sudo -u pi /home/pi/oprint/bin/pip install .
  popd
  rm -rf OctoPrint-Netconnectd
popd

# install findmymrbeam-plugin
pushd /home/pi
  gitclone OCTOPI_FINDMYMRBEAM_PLUGIN_REPO OctoPrint-FindMyOctoPrint
  pushd OctoPrint-FindMyOctoPrint
    addGitHashToConfig "findmymrbeamhash"
    sudo -u pi /home/pi/oprint/bin/pip install .
  popd
  rm -rf OctoPrint-FindMyOctoPrint
popd

# install Mr Beam shield software
pushd /home/pi
  gitclone OCTOPI_MRBEAMSHIELD_REPO pcf8575
  pushd pcf8575
    addGitHashToConfig "pcf8575hash"
    sudo cp pcf8575.service /etc/systemd/system/
    sudo systemctl enable pcf8575.service
  popd
popd

# install Mr Beam LED software
pushd /home/pi
  gitclone OCTOPI_MRBEAMLED_REPO mrbeamledstrips
  pushd mrbeamledstrips
    addGitHashToConfig "mrbeamledstripshash"
    sudo pip install .
    sudo python setup.py install_extras
    sudo systemctl enable mrbeam_ledstrips.service
  popd
  rm -rf mrbeamledstrips
popd

# activate ssh
pushd /boot
  touch ssh
popd

# activate i2c
echo "i2c-dev" >> /etc/modules
sed -i -e "s@#dtparam=i2c_arm=on@dtparam=i2c_arm=on@g" /boot/config.txt

# enable hardware serial
echo "dtoverlay=pi3-miniuart-bt" >> /boot/config.txt
echo "enable_uart=1" >> /boot/config.txt
sed -i -e "s@console=serial0,115200 @@g" /boot/cmdline.txt

# add pi user to staff group (needed for write access to /usr/local/lib/python2.7/dist-packages)
sudo usermod -a -G staff pi

# develop stuff
if [ $BUILD_FLAVOR == 'develop' ]
then
    echo "devel:" >> /home/pi/.octprint/config.yaml
    echo "  cache:" >> /home/pi/.octprint/config.yaml
    echo "    enabled: false" >> /home/pi/.octprint/config.yaml
    echo "  webassets:" >> /home/pi/.octprint/config.yaml
    echo "    bundle: false" >> /home/pi/.octprint/config.yaml
    echo "    clean_on_startup: true" >> /home/pi/.octprint/config.yaml
    echo "    minify: false" >> /home/pi/.octprint/config.yaml

    echo "loggers:" >> /home/pi/.octprint/logging.yaml
    echo "  octoprint.plugins.mrbeam:" >> /home/pi/.octprint/logging.yaml
    echo "    level: DEBUG" >> /home/pi/.octprint/logging.yaml
    echo "  mrbeam:" >> /home/pi/.octprint/logging.yaml
    echo "    level: DEBUG" >> /home/pi/.octprint/logging.yaml
    echo "  ANDYTEST:" >> /home/pi/.octprint/logging.yaml
    echo "    level: DEBUG" >> /home/pi/.octprint/logging.yaml
    echo "  ANDYTEST.usersettings:" >> /home/pi/.octprint/logging.yaml
    echo "    level: INFO" >> /home/pi/.octprint/logging.yaml
    echo "  octoprint.plugins.mrbeam.led_events:" >> /home/pi/.octprint/logging.yaml
    echo "    level: ERROR" >> /home/pi/.octprint/logging.yaml

    #change default password
    SALT=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 16 | head -n 1)
    PASS=$(mkpasswd -m sha-512 $DEV_PASSWORD $SALT)
    usermod -p $PASS pi
else
    #lock the password to only allow login via ssh key
    passwd -l pi
fi

# add date and time stamp to image
echo $(date) > /etc/octopi_datetime

# add Variant and Flavour name to image
echo $(BUILD_VARIANT) > /etc/octopi_variant
echo $(BUILD_FLAVOR) > /etc/octopi_flavor

#cleanup
apt-get clean
sudo rm /common.sh
